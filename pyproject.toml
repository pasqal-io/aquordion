[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aquordion"
description = "A quantum library to test and benchmark Pasqal's backends."
authors = [
    { name = "Charles Moussa", email = "charles.moussa@pasqal.com" },
]
requires-python = ">=3.8"
license = {text = "Apache 2.0"}
version = "0.1.0"

classifiers=[
    "License :: Other/Proprietary License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "qadence[horqrux]==1.11.2",
]


[project.optional-dependencies]
dev = ["black", "pytest", "pytest-xdist", "pytest-cov", "flake8", "mypy", "pre-commit", "ruff", "hypothesis", "pytest-benchmark[histogram]"]

[tool.hatch.envs.default]
installer = "uv"

[tool.hatch.envs.tests]
installer = "uv"
features = [
  "dev",
]

[tool.hatch.envs.tests.scripts]
test = "pytest -n auto --ignore=tests/test_timings.py --ignore=tests/test_timings_vqe.py {args}"
benchmarks = "pytest --benchmark-disable-gc --benchmark-json docs/stats.json -v -s tests/test_timings.py"
vqe = "pytest --benchmark-disable-gc --benchmark-json docs/stats_vqe.json -v -s tests/test_timings_vqe.py"

[tool.hatch.envs.docs]
installer = "uv"
dependencies = [
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings",
  "mkdocstrings-python",
  "mkdocs-section-index",
  "mkdocs-jupyter",
  "mkdocs-exclude",
  "markdown-exec",
  "mike",
  "matplotlib",
  "pandas",
]

[tool.hatch.build.targets.wheel]
packages = ["aquordion"]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict"
serve = "mkdocs serve --dev-addr localhost:8000"

[tool.ruff]
select = ["E", "F", "I", "Q"]
extend-ignore = ["F841", "F403", "E731", "E741"]
line-length = 120

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "E402"]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
line_length = 100
combine_as_imports = true
balanced_wrapping = true
lines_after_imports = 2
include_trailing_comma = true
multi_line_output = 5

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = false
ignore_missing_imports = true
